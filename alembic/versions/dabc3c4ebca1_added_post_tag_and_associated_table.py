"""Added Post, Tag, and Associated table

Revision ID: dabc3c4ebca1
Revises: 6a120611501e
Create Date: 2023-12-23 12:02:37.615159

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "dabc3c4ebca1"
down_revision: Union[str, None] = "6a120611501e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "saved_post",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("author", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_saved_post_id"), "saved_post", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_saved_post_user_id"), "saved_post", ["user_id"], unique=False
    )
    op.create_table(
        "tag",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["user_id"], ["user.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tag_id"), "tag", ["id"], unique=False)
    op.create_index(op.f("ix_tag_user_id"), "tag", ["user_id"], unique=False)
    op.create_table(
        "post_tag_association",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("tag_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["post_id"],
            ["saved_post.id"],
        ),
        sa.ForeignKeyConstraint(
            ["tag_id"],
            ["tag.id"],
        ),
        sa.PrimaryKeyConstraint("post_id", "tag_id", "id"),
    )
    op.create_index(
        op.f("ix_post_tag_association_id"),
        "post_tag_association",
        ["id"],
        unique=False,
    )
    op.drop_table("association_table")
    op.drop_table("left_table")
    op.drop_table("right_table")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "right_table",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('right_table_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="right_table_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "left_table",
        sa.Column(
            "id",
            sa.INTEGER(),
            server_default=sa.text("nextval('left_table_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="left_table_pkey"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "association_table",
        sa.Column(
            "left_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "right_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "extra_data", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["left_id"],
            ["left_table.id"],
            name="association_table_left_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["right_id"],
            ["right_table.id"],
            name="association_table_right_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "left_id", "right_id", name="association_table_pkey"
        ),
    )
    op.drop_index(
        op.f("ix_post_tag_association_id"), table_name="post_tag_association"
    )
    op.drop_table("post_tag_association")
    op.drop_index(op.f("ix_tag_user_id"), table_name="tag")
    op.drop_index(op.f("ix_tag_id"), table_name="tag")
    op.drop_table("tag")
    op.drop_index(op.f("ix_saved_post_user_id"), table_name="saved_post")
    op.drop_index(op.f("ix_saved_post_id"), table_name="saved_post")
    op.drop_table("saved_post")
    # ### end Alembic commands ###
